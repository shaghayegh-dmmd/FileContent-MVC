//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ICBS.OfficialFile.BLL.OfficialFileServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OfficialFileContentModelSVC", Namespace="http://schemas.datacontract.org/2004/07/ICBS.OfficialFile.WCFDAL.Models")]
    [System.SerializableAttribute()]
    public partial class OfficialFileContentModelSVC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CreationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CreatorUserNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] FileContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid FileSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<long> FileSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubjectTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemFileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SystemFileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdateUserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CreationDate {
            get {
                return this.CreationDateField;
            }
            set {
                if ((this.CreationDateField.Equals(value) != true)) {
                    this.CreationDateField = value;
                    this.RaisePropertyChanged("CreationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreatorUserName {
            get {
                return this.CreatorUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorUserNameField, value) != true)) {
                    this.CreatorUserNameField = value;
                    this.RaisePropertyChanged("CreatorUserName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] FileContent {
            get {
                return this.FileContentField;
            }
            set {
                if ((object.ReferenceEquals(this.FileContentField, value) != true)) {
                    this.FileContentField = value;
                    this.RaisePropertyChanged("FileContent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FileSerial {
            get {
                return this.FileSerialField;
            }
            set {
                if ((this.FileSerialField.Equals(value) != true)) {
                    this.FileSerialField = value;
                    this.RaisePropertyChanged("FileSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<long> FileSize {
            get {
                return this.FileSizeField;
            }
            set {
                if ((this.FileSizeField.Equals(value) != true)) {
                    this.FileSizeField = value;
                    this.RaisePropertyChanged("FileSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubjectType {
            get {
                return this.SubjectTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectTypeField, value) != true)) {
                    this.SubjectTypeField = value;
                    this.RaisePropertyChanged("SubjectType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemFileName {
            get {
                return this.SystemFileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemFileNameField, value) != true)) {
                    this.SystemFileNameField = value;
                    this.RaisePropertyChanged("SystemFileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SystemFileType {
            get {
                return this.SystemFileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SystemFileTypeField, value) != true)) {
                    this.SystemFileTypeField = value;
                    this.RaisePropertyChanged("SystemFileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateDate {
            get {
                return this.UpdateDateField;
            }
            set {
                if ((this.UpdateDateField.Equals(value) != true)) {
                    this.UpdateDateField = value;
                    this.RaisePropertyChanged("UpdateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdateUserName {
            get {
                return this.UpdateUserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateUserNameField, value) != true)) {
                    this.UpdateUserNameField = value;
                    this.RaisePropertyChanged("UpdateUserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccessFileContentModelSVC", Namespace="http://schemas.datacontract.org/2004/07/ICBS.OfficialFile.WCFDAL.Models")]
    [System.SerializableAttribute()]
    public partial class AccessFileContentModelSVC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long FileContentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long FileContentId {
            get {
                return this.FileContentIdField;
            }
            set {
                if ((this.FileContentIdField.Equals(value) != true)) {
                    this.FileContentIdField = value;
                    this.RaisePropertyChanged("FileContentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserList {
            get {
                return this.UserListField;
            }
            set {
                if ((object.ReferenceEquals(this.UserListField, value) != true)) {
                    this.UserListField = value;
                    this.RaisePropertyChanged("UserList");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OfficialFileServiceReference.IOfficialFileService")]
    public interface IOfficialFileService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/CreatCacheFileContent", ReplyAction="http://tempuri.org/IOfficialFileService/CreatCacheFileContentResponse")]
        bool CreatCacheFileContent(byte[] content, System.Guid guid, System.Nullable<long> length, bool result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/CreatCacheFileContent", ReplyAction="http://tempuri.org/IOfficialFileService/CreatCacheFileContentResponse")]
        System.Threading.Tasks.Task<bool> CreatCacheFileContentAsync(byte[] content, System.Guid guid, System.Nullable<long> length, bool result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/CreatFileContent", ReplyAction="http://tempuri.org/IOfficialFileService/CreatFileContentResponse")]
        bool CreatFileContent(ICBS.OfficialFile.BLL.OfficialFileServiceReference.OfficialFileContentModelSVC fileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/CreatFileContent", ReplyAction="http://tempuri.org/IOfficialFileService/CreatFileContentResponse")]
        System.Threading.Tasks.Task<bool> CreatFileContentAsync(ICBS.OfficialFile.BLL.OfficialFileServiceReference.OfficialFileContentModelSVC fileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/EditeFileContent", ReplyAction="http://tempuri.org/IOfficialFileService/EditeFileContentResponse")]
        bool EditeFileContent(ICBS.OfficialFile.BLL.OfficialFileServiceReference.OfficialFileContentModelSVC fileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/EditeFileContent", ReplyAction="http://tempuri.org/IOfficialFileService/EditeFileContentResponse")]
        System.Threading.Tasks.Task<bool> EditeFileContentAsync(ICBS.OfficialFile.BLL.OfficialFileServiceReference.OfficialFileContentModelSVC fileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/DeleteFileContent", ReplyAction="http://tempuri.org/IOfficialFileService/DeleteFileContentResponse")]
        bool DeleteFileContent(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/DeleteFileContent", ReplyAction="http://tempuri.org/IOfficialFileService/DeleteFileContentResponse")]
        System.Threading.Tasks.Task<bool> DeleteFileContentAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/GetAllFileContent", ReplyAction="http://tempuri.org/IOfficialFileService/GetAllFileContentResponse")]
        System.Collections.Generic.List<ICBS.OfficialFile.BLL.OfficialFileServiceReference.OfficialFileContentModelSVC> GetAllFileContent(string fileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/GetAllFileContent", ReplyAction="http://tempuri.org/IOfficialFileService/GetAllFileContentResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ICBS.OfficialFile.BLL.OfficialFileServiceReference.OfficialFileContentModelSVC>> GetAllFileContentAsync(string fileType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/GetAttachment", ReplyAction="http://tempuri.org/IOfficialFileService/GetAttachmentResponse")]
        ICBS.OfficialFile.BLL.OfficialFileServiceReference.OfficialFileContentModelSVC GetAttachment(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/GetAttachment", ReplyAction="http://tempuri.org/IOfficialFileService/GetAttachmentResponse")]
        System.Threading.Tasks.Task<ICBS.OfficialFile.BLL.OfficialFileServiceReference.OfficialFileContentModelSVC> GetAttachmentAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/AddFileContent", ReplyAction="http://tempuri.org/IOfficialFileService/AddFileContentResponse")]
        bool AddFileContent(System.Guid id, byte[] fileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/AddFileContent", ReplyAction="http://tempuri.org/IOfficialFileService/AddFileContentResponse")]
        System.Threading.Tasks.Task<bool> AddFileContentAsync(System.Guid id, byte[] fileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/CreatFileAccess", ReplyAction="http://tempuri.org/IOfficialFileService/CreatFileAccessResponse")]
        bool CreatFileAccess(ICBS.OfficialFile.BLL.OfficialFileServiceReference.AccessFileContentModelSVC fileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/CreatFileAccess", ReplyAction="http://tempuri.org/IOfficialFileService/CreatFileAccessResponse")]
        System.Threading.Tasks.Task<bool> CreatFileAccessAsync(ICBS.OfficialFile.BLL.OfficialFileServiceReference.AccessFileContentModelSVC fileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/EditeFileAccess", ReplyAction="http://tempuri.org/IOfficialFileService/EditeFileAccessResponse")]
        bool EditeFileAccess(ICBS.OfficialFile.BLL.OfficialFileServiceReference.AccessFileContentModelSVC fileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/EditeFileAccess", ReplyAction="http://tempuri.org/IOfficialFileService/EditeFileAccessResponse")]
        System.Threading.Tasks.Task<bool> EditeFileAccessAsync(ICBS.OfficialFile.BLL.OfficialFileServiceReference.AccessFileContentModelSVC fileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/DeleteFileAccess", ReplyAction="http://tempuri.org/IOfficialFileService/DeleteFileAccessResponse")]
        bool DeleteFileAccess(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/DeleteFileAccess", ReplyAction="http://tempuri.org/IOfficialFileService/DeleteFileAccessResponse")]
        System.Threading.Tasks.Task<bool> DeleteFileAccessAsync(long id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/GetAllFileAccess", ReplyAction="http://tempuri.org/IOfficialFileService/GetAllFileAccessResponse")]
        System.Collections.Generic.List<ICBS.OfficialFile.BLL.OfficialFileServiceReference.AccessFileContentModelSVC> GetAllFileAccess();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/GetAllFileAccess", ReplyAction="http://tempuri.org/IOfficialFileService/GetAllFileAccessResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<ICBS.OfficialFile.BLL.OfficialFileServiceReference.AccessFileContentModelSVC>> GetAllFileAccessAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/DownloadFileContent", ReplyAction="http://tempuri.org/IOfficialFileService/DownloadFileContentResponse")]
        byte[] DownloadFileContent(long id, System.Guid serial, System.Nullable<long> length, int i);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOfficialFileService/DownloadFileContent", ReplyAction="http://tempuri.org/IOfficialFileService/DownloadFileContentResponse")]
        System.Threading.Tasks.Task<byte[]> DownloadFileContentAsync(long id, System.Guid serial, System.Nullable<long> length, int i);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOfficialFileServiceChannel : ICBS.OfficialFile.BLL.OfficialFileServiceReference.IOfficialFileService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OfficialFileServiceClient : System.ServiceModel.ClientBase<ICBS.OfficialFile.BLL.OfficialFileServiceReference.IOfficialFileService>, ICBS.OfficialFile.BLL.OfficialFileServiceReference.IOfficialFileService {
        
        public OfficialFileServiceClient() {
        }
        
        public OfficialFileServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OfficialFileServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OfficialFileServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OfficialFileServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool CreatCacheFileContent(byte[] content, System.Guid guid, System.Nullable<long> length, bool result) {
            return base.Channel.CreatCacheFileContent(content, guid, length, result);
        }
        
        public System.Threading.Tasks.Task<bool> CreatCacheFileContentAsync(byte[] content, System.Guid guid, System.Nullable<long> length, bool result) {
            return base.Channel.CreatCacheFileContentAsync(content, guid, length, result);
        }
        
        public bool CreatFileContent(ICBS.OfficialFile.BLL.OfficialFileServiceReference.OfficialFileContentModelSVC fileData) {
            return base.Channel.CreatFileContent(fileData);
        }
        
        public System.Threading.Tasks.Task<bool> CreatFileContentAsync(ICBS.OfficialFile.BLL.OfficialFileServiceReference.OfficialFileContentModelSVC fileData) {
            return base.Channel.CreatFileContentAsync(fileData);
        }
        
        public bool EditeFileContent(ICBS.OfficialFile.BLL.OfficialFileServiceReference.OfficialFileContentModelSVC fileData) {
            return base.Channel.EditeFileContent(fileData);
        }
        
        public System.Threading.Tasks.Task<bool> EditeFileContentAsync(ICBS.OfficialFile.BLL.OfficialFileServiceReference.OfficialFileContentModelSVC fileData) {
            return base.Channel.EditeFileContentAsync(fileData);
        }
        
        public bool DeleteFileContent(long id) {
            return base.Channel.DeleteFileContent(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteFileContentAsync(long id) {
            return base.Channel.DeleteFileContentAsync(id);
        }
        
        public System.Collections.Generic.List<ICBS.OfficialFile.BLL.OfficialFileServiceReference.OfficialFileContentModelSVC> GetAllFileContent(string fileType) {
            return base.Channel.GetAllFileContent(fileType);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ICBS.OfficialFile.BLL.OfficialFileServiceReference.OfficialFileContentModelSVC>> GetAllFileContentAsync(string fileType) {
            return base.Channel.GetAllFileContentAsync(fileType);
        }
        
        public ICBS.OfficialFile.BLL.OfficialFileServiceReference.OfficialFileContentModelSVC GetAttachment(long id) {
            return base.Channel.GetAttachment(id);
        }
        
        public System.Threading.Tasks.Task<ICBS.OfficialFile.BLL.OfficialFileServiceReference.OfficialFileContentModelSVC> GetAttachmentAsync(long id) {
            return base.Channel.GetAttachmentAsync(id);
        }
        
        public bool AddFileContent(System.Guid id, byte[] fileData) {
            return base.Channel.AddFileContent(id, fileData);
        }
        
        public System.Threading.Tasks.Task<bool> AddFileContentAsync(System.Guid id, byte[] fileData) {
            return base.Channel.AddFileContentAsync(id, fileData);
        }
        
        public bool CreatFileAccess(ICBS.OfficialFile.BLL.OfficialFileServiceReference.AccessFileContentModelSVC fileData) {
            return base.Channel.CreatFileAccess(fileData);
        }
        
        public System.Threading.Tasks.Task<bool> CreatFileAccessAsync(ICBS.OfficialFile.BLL.OfficialFileServiceReference.AccessFileContentModelSVC fileData) {
            return base.Channel.CreatFileAccessAsync(fileData);
        }
        
        public bool EditeFileAccess(ICBS.OfficialFile.BLL.OfficialFileServiceReference.AccessFileContentModelSVC fileData) {
            return base.Channel.EditeFileAccess(fileData);
        }
        
        public System.Threading.Tasks.Task<bool> EditeFileAccessAsync(ICBS.OfficialFile.BLL.OfficialFileServiceReference.AccessFileContentModelSVC fileData) {
            return base.Channel.EditeFileAccessAsync(fileData);
        }
        
        public bool DeleteFileAccess(long id) {
            return base.Channel.DeleteFileAccess(id);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteFileAccessAsync(long id) {
            return base.Channel.DeleteFileAccessAsync(id);
        }
        
        public System.Collections.Generic.List<ICBS.OfficialFile.BLL.OfficialFileServiceReference.AccessFileContentModelSVC> GetAllFileAccess() {
            return base.Channel.GetAllFileAccess();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<ICBS.OfficialFile.BLL.OfficialFileServiceReference.AccessFileContentModelSVC>> GetAllFileAccessAsync() {
            return base.Channel.GetAllFileAccessAsync();
        }
        
        public byte[] DownloadFileContent(long id, System.Guid serial, System.Nullable<long> length, int i) {
            return base.Channel.DownloadFileContent(id, serial, length, i);
        }
        
        public System.Threading.Tasks.Task<byte[]> DownloadFileContentAsync(long id, System.Guid serial, System.Nullable<long> length, int i) {
            return base.Channel.DownloadFileContentAsync(id, serial, length, i);
        }
    }
}
